{"version":3,"file":"static/js/989.3fa62f53.chunk.js","mappings":"sLACA,G,QAA0B,0BAA1B,EAAiE,6BAAjE,EAA0I,0BCA1I,EAAyB,uB,mBCWzB,EARe,SAACA,GACZ,OACI,gBAAKC,UAAWC,EAAhB,UACI,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAsCJ,EAAMK,UCNxD,EAA0B,yBCQ1B,EANgB,SAACL,GACb,OACI,gBAAKC,UAAWC,EAAhB,SAA4BF,EAAMM,W,uCCGpCC,GAAeC,EAAAA,EAAAA,GAAiB,KA6ChCC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACV,GACpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GACXC,YAAa,cACbZ,KAAM,iBACNa,SAAU,CAACC,EAAAA,EAAUZ,QAEhC,0BACI,qDAOhB,EA7CgB,SAACP,GAGb,IAAIoB,EAAiBpB,EAAMqB,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CACQnB,GAAImB,EAAEnB,GACNC,KAAMkB,EAAElB,MAFHkB,EAAEnB,OAGvDoB,EAAkBxB,EAAMyB,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CACSpB,QAASoB,EAAEpB,SADNoB,EAAEtB,OAQ9D,OACI,iBAAKH,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKkB,KAEL,iBAAKnB,UAAWC,EAAhB,WACI,yBAAMsB,KACN,SAACf,EAAD,CAAqBG,SAXX,SAACe,GACnB3B,EAAM4B,mBAAmBD,EAAOE,0B,oBCGxC,GAAeC,E,QAAAA,KAAQC,EAAAA,EAAAA,KAlBC,SAACC,GACrB,MACI,CACIX,QAASW,EAAMC,YAAYZ,QAC3BI,SAAUO,EAAMC,YAAYR,SAC5BI,eAAgBG,EAAMC,YAAYJ,mBAInB,SAACK,GACxB,MAAQ,CACAN,mBAAoB,SAACC,GACjBK,GAASC,EAAAA,EAAAA,GAA0BN,SAMkBO,EAAAA,EAArE,CAAuFC","sources":["webpack://samurai-way-on-js/./src/components/Body/Dialogs/Dialogs.module.css?29e2","components/Body/Dialogs/Dialog/Dialog.module.css","components/Body/Dialogs/Dialog/Dialog.jsx","components/Body/Dialogs/Message/Message.module.css","components/Body/Dialogs/Message/Message.jsx","components/Body/Dialogs/Dialogs.jsx","components/Body/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__di2bw\",\"dialogItems\":\"Dialogs_dialogItems__d35Wn\",\"active\":\"Dialogs_active__YJbew\",\"messages\":\"Dialogs_messages__ovSsE\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__8M4eU\"};","import React from 'react';\r\nimport s from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__AsTM8\"};","import React from 'react';\r\nimport s from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport Dialog from './Dialog/Dialog'\r\nimport Message from './Message/Message'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Textarea} from '../../common/FormsControls/FormsControls'\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators'\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let dialogsElement = props.dialogs.map(d => <Dialog key={d.id}\r\n                                                        id={d.id}\r\n                                                        name={d.name}/>)\r\n    let messagesElement = props.messages.map(m => <Message key={m.id}\r\n                                                           message={m.message}/>)\r\n\r\n\r\n    const addNewMessage = (values) => {\r\n        props.onSendMessageClick(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       placeholder={'New Message'}\r\n                       name={'newMessageBody'}\r\n                       validate={[required, maxLength100]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs","import {sendNewMessageBodyCreator} from '../../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from '../../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            dialogs: state.dialogsPage.dialogs,\r\n            messages: state.dialogsPage.messages,\r\n            newMessageBody: state.dialogsPage.newMessageBody,\r\n        }\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n            onSendMessageClick: (newMessageBody) => {\r\n                dispatch(sendNewMessageBodyCreator(newMessageBody))\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)"],"names":["props","className","s","to","id","name","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsElement","dialogs","map","d","messagesElement","messages","m","values","onSendMessageClick","newMessageBody","compose","connect","state","dialogsPage","dispatch","sendNewMessageBodyCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}